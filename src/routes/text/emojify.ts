import { Input, Output } from "@rqft/http";
import { give, stop } from "../../models/result";

export function textEmojify(req: Input<"/text/emojify">, res: Output): void {
  const data = req.query.get("data");

  if (!data) {
    stop(res, 400, "No data provided");
  }

  const result = emojify(data);

  return give(res, result);
}

const emoji = {
  "0": "0Ô∏è‚É£",
  zero: "0Ô∏è‚É£",
  "1": "1Ô∏è‚É£",
  one: "1Ô∏è‚É£",
  "2": "2Ô∏è‚É£",
  two: "2Ô∏è‚É£",
  "3": "3Ô∏è‚É£",
  three: "3Ô∏è‚É£",
  "4": "4Ô∏è‚É£",
  four: "4Ô∏è‚É£",
  "5": "5Ô∏è‚É£",
  five: "5Ô∏è‚É£",
  "6": "6Ô∏è‚É£",
  six: "6Ô∏è‚É£",
  "7": "7Ô∏è‚É£",
  seven: "7Ô∏è‚É£",
  "8": "8Ô∏è‚É£",
  eight: "8Ô∏è‚É£",
  "9": "9Ô∏è‚É£",
  nine: "9Ô∏è‚É£",
  free: "üÜì",
  cool: "üÜí",
  abcd: "üî°",
  abc: "üî§",
  new: "üÜï",
  sos: "üÜò",
  cl: "üÜë",
  ok: "üÜó",
  id: "üÜî",
  wc: "üöæ",
  up: "üÜô",
  ab: "üÜé",
  "!!": "‚ÄºÔ∏è",
  "!?": "‚ÅâÔ∏è",
  "!": "‚ùó",
  "?": "‚ùì",
  "#": "#Ô∏è‚É£",
  "*": "*Ô∏è‚É£",
  "+": "‚ûï",
  "-": "‚ûñ",
  "/": "‚ûó",
  "√∑": "‚ûó",
  $: "üí≤",
  ".": "‚èπÔ∏è",
  " ": "‚¨õ",
  ">": "‚ñ∂Ô∏è",
  "<": "‚óÄÔ∏è",
  "^": "üîº",
  a: "üá¶",
  b: "üáß",
  c: "üá®",
  d: "üá©",
  e: "üá™",
  f: "üá´",
  g: "üá¨",
  h: "üá≠",
  i: "üáÆ",
  j: "üáØ",
  k: "üá∞",
  l: "üá±",
  m: "üá≤",
  n: "üá≥",
  o: "üá¥",
  p: "üáµ",
  q: "üá∂",
  r: "üá∑",
  s: "üá∏",
  t: "üáπ",
  u: "üá∫",
  v: "üáª",
  w: "üáº",
  x: "üáΩ",
  y: "üáæ",
  z: "üáø",
};

function emojify(data: string): string {
  if (data.length === 0) {
    return "";
  }

  data = data.toLowerCase()

  for (const [k, v] of Object.entries(emoji)) {
    data = data.split(k).join("\u17B5" + v);
  }

  return data;
}
